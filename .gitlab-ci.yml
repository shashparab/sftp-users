image: hashicorp/terraform:latest

variables:
  # !!! IMPORTANT !!!
  # You must change this variable to the name of your S3 bucket for Terraform state.
  TF_STATE_BUCKET: "your-terraform-state-bucket"

before_script:
  - apk --no-cache add bash git
  - chmod +x ${CI_PROJECT_DIR}/ci/manage-users.sh

stages:
  - detect
  - validate
  - plan
  - apply

detect-changes:
  stage: detect
  script:
    - ${CI_PROJECT_DIR}/ci/manage-users.sh detect > changes.txt
    - if [ -s changes.txt ]; then echo "CHANGES_PRESENT=true" > changes.env; fi
  artifacts:
    paths:
      - changes.txt
    reports:
      dotenv: changes.env
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

validate:
  stage: validate
  needs: ["detect-changes"]
  script:
    - cd ${CI_PROJECT_DIR}/example
    - terraform init -reconfigure
    - terraform validate
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CHANGES_PRESENT'

plan:
  stage: plan
  needs: ["detect-changes"]
  script:
    - |
      while read -r status file_path; do
        USER_NAME=$(basename ${file_path} .yml)
        ${CI_PROJECT_DIR}/ci/manage-users.sh init ${USER_NAME}
        ${CI_PROJECT_DIR}/ci/manage-users.sh plan ${USER_NAME} ${status}
      done < changes.txt
  artifacts:
    paths:
      - example/*.plan
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CHANGES_PRESENT'

apply:
  stage: apply
  needs: ["detect-changes"]
  script:
    - |
      while read -r status file_path; do
        USER_NAME=$(basename ${file_path} .yml)
        # The plan file was created in the plan job for the MR and is not available here.
        # We must re-run init and plan before applying.
        ${CI_PROJECT_DIR}/ci/manage-users.sh init ${USER_NAME}
        ${CI_PROJECT_DIR}/ci/manage-users.sh plan ${USER_NAME} ${status}
        ${CI_PROJECT_DIR}/ci/manage-users.sh apply ${USER_NAME}
      done < changes.txt
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CHANGES_PRESENT'
