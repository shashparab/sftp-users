image: hashicorp/terraform:latest

include:
  - project: ci/stable/terraform-templates
    file: '/templates/terraform.yml'

before_script:
  - chmod +x ${CI_PROJECT_DIR}/ci/manage-users.sh

variables:
  TF_VAR_TF_STATE_BUCKET: "your-terraform-state-bucket"
  TF_VAR_TF_STATE_FILE_KEY: "sftp-users/${USER_NAME}/terraform.tfstate"
  TF_VAR_TF_STATE_TABLE: "your-terraform-lock-table"
  TF_VAR_user_config_file: "users/${USER_NAME}.yml"
  TF_VAR_create_user: "${CREATE_USER}"
  TERRAFORM_PLAN_NAME: "${USER_NAME}"

stages:
  - prepare
  - style-checks
  - bootstrap
  - plan
  - apply

.region-shared:
  image: ${TERRAFORM_IMAGE}:${TERRAFORM_VERSION}

runner-auth:
  stage: prepare
  extends: [.runner-artifactory-auth]

vault-aws-auth:
  stage: prepare
  extends: [.vault-aws-auth]

artifactory-ci-user-auth:
  stage: prepare
  extends: [.artifactory-ci-user-auth]

terraform-fmt:
  stage: style-checks
  extends: [ .region-shared,.terraform-fmt]

tflint:
  stage: style-checks
  extends: [ .region-shared,.tflint]
  needs: [runner-auth, vault-aws-auth]
  dependencies: [runner-auth, vault-aws-auth]

terraform-init:
  stage: bootstrap
  extends: [ .region-shared,.terraform-init]
  needs: [runner-auth, vault-aws-auth, terraform-fmt]
  dependencies: [runner-auth, vault-aws-auth]

terraform-validate:
  stage: validate
  extends: [ .region-shared,.terraform-validate]
  needs: [runner-auth, vault-aws-auth, terraform-init]
  dependencies: [runner-auth, vault-aws-auth, terraform-init]

terraform-plan:
  stage: plan
  extends: [ .region-shared,.terraform-plan]
  needs: [runner-auth, vault-aws-auth, terraform-validate]
  dependencies: [runner-auth, vault-aws-auth, terraform-validate]

terraform-apply:
  stage: apply
  extends: [ .region-shared,.terraform-apply]
  needs: [runner-auth, vault-aws-auth, terraform-plan]
  dependencies: [runner-auth, vault-aws-auth, terraform-plan]